(ns gswd3.client.turnstile_traffic
  (:require [gswd3.client.util :as uti]))

(def d3 js/d3)

(defn ^:export draw [jd]
  (let [margin 50
        width (- 700 margin)
        height (- 300 margin)
        dboth (. jd.times_square (concat jd.grand_central))
        count_extent (uti/d3-extent dboth "count")
        time_extent (uti/d3-extent dboth "time")
        count_scale (uti/d3-linear-scale count_extent height margin)
        time_scale (uti/d3-time-scale time_extent margin width)
        count_axis (.. (.axis (.-svg js/d3)) (scale count_scale) (orient "left"))
        time_axis (.. (.axis (.-svg js/d3)) (scale time_scale))
        line (uti/d3-svg-line
              (fn [d] (time_scale (.-time d)))
              (fn [d] (count_scale (.-count d)))
              "linear")]
    (.. d3 (select "body")
        (append "svg")
        (attr "class" "chart")
        (attr "width" (+ width margin))
        (attr "height" (+ height margin)))
    (.. d3 (select "svg")
        (append "path")
        (attr "d" (line jd.times_square))
        (attr "class" "times_square"))
    (.. d3 (select "svg")
        (append "path")
        (attr "d" (line jd.grand_central))
        (attr "class" "grand_central"))
    (.. d3 (select "svg")
        (selectAll "circle.times_square")
        (data jd.times_square)
        (enter)
        (append "circle")
        (attr "class" "times_square"))
    (.. d3 (select "svg")
        (selectAll "circle.grand_central")
        (data jd.grand_central)
        (enter)
        (append "circle")
        (attr "class" "grand_central"))
    (.. d3 (selectAll "circle")
        (attr "cy" (fn [d] (count_scale (.-count d))))
        (attr "cx" (fn [d] (time_scale (.-time d))))
        (attr "r" 3))
    (.. d3 (select "svg")
        (append "g")
        (attr "class" "x axis")
        (attr "transform" (str "translate(0," height ")"))
        (call time_axis))
    (.. d3 (select "svg")
        (append "g")
        (attr "class" "y axis")
        (attr "transform" (str "translate(" margin ",0)"))
        (call count_axis))
    (.. d3 (select ".y.axis")
        (append "text")
        (text "mean number of turnstile revolutions")
        (attr "transform" (str "rotate (90, " (- margin) ", 0)"))
        (attr "x" 20)
        (attr "y" 0))
    (.. d3 (select ".x.axis")
        (append "text")
        (text "time")
        (attr "x" (fn [] (- (/ width 1.6) margin)))
        (attr "y" (/ margin 1.5)))))
